/////////////////
// Semantic.gs // for LESS: http://lesscss.org/
/////////////////

// Utility variable â€” you should never need to modify this
@gridsystem-width: (@column-width*@columns) + (@gutter-width*@columns) * 1px;
// 720 + 240 = 960

// Set @total-width to 100% for a fluid layout
// @total-width: @gridsystem-width;
@total-width: 100%;

//////////
// GRID //
//////////

.row(@y:@columns) {
  display: inline-block;
  max-width: @site-width + 20px;

  @extra-width: ((((@gutter-width + @gridsystem-width)/@gridsystem-width)-1) * (@columns/@y)) + 1;
  width: @total-width * @extra-width;
  margin-left: @total-width*((@gutter-width*.5)/@gridsystem-width)*(@columns/@y)*-1;
  margin-right: @total-width*((@gutter-width*.5)/@gridsystem-width)*(@columns/@y)*-1;

  // width: @total-width*((@gutter-width + @gridsystem-width)/@gridsystem-width);
  // margin: 0 @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1);
  .clearfix;
}
.column(@x,@y:@columns) {
  display: inline;
  float: left;

  @extra-width: ((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width) * (@columns/@y);
  width: @total-width * @extra-width;
  margin-left: @total-width*((@gutter-width*.5)/@gridsystem-width)*(@columns/@y);
  margin-right: @total-width*((@gutter-width*.5)/@gridsystem-width)*(@columns/@y);

  // width: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
  // margin: 0 @total-width*((@gutter-width*.5)/@gridsystem-width);
}
.push(@offset:1) {
  margin-left: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}
.pull(@offset:1) {
  margin-right: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}

.row{
  .row();
}
